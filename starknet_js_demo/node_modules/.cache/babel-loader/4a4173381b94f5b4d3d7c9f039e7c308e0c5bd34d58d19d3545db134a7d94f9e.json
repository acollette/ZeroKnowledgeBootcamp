{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrecollette/Documents/ZKBootcamp/ZK-repo/ZeroKnowledgeBootcamp/starknet_js_demo/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"get-starknet\";\nimport { Contract } from \"starknet\";\nimport { toBN } from \"starknet/dist/utils/number\";\nimport contractAbi from \"./contract_abi.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x0704ed6b41f5d9dfdc5037c627d53ee52aef0675ed47ba59b57b8152c0144a9e\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState('');\n  const [address, setAddress] = useState('');\n  const [retrievedBalance, setRetrievedBalance] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const connectWallet = async () => {\n    try {\n      // connect the wallet\n      const starknet = await connect();\n      await (starknet === null || starknet === void 0 ? void 0 : starknet.enable({\n        starknetVersion: \"v4\"\n      }));\n      // set up the provider\n      setProvider(starknet.account);\n      // set wallet address\n      setAddress(starknet.selectedAddress);\n      // set connection flag\n      setIsConnected(true);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const increaseBalanceFunction = async () => {\n    try {\n      // create a contract object based on the provider, address and abi\n      const contract = new Contract(contractAbi, contractAddress, provider);\n\n      // call the increase_balance function\n      await contract.increase_balance(13);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const getBalanceFunction = async () => {\n    try {\n      // create a contract object based on the provider, address and abi\n      const contract = new Contract(contractAbi, contractAddress, provider);\n      // call the function\n      const _bal = await contract.get_balance();\n      // decode the result\n      const _decodedBalance = toBN(_bal.res, 16).toString();\n      // display the result\n      setRetrievedBalance(_decodedBalance);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Minimal Starknet JS DEMO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), isConnected ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"connect\",\n          children: [address.slice(0, 5), \"...\", address.slice(60)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"connect\",\n          onClick: () => connectWallet(),\n          children: \"Connect wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: \"Using Starknet JS with a simple contract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            href: \"#\",\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Use Alpha-goerli test net! \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardForm\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"button\",\n                value: \"Add ETH  \",\n                onClick: () => increaseBalanceFunction()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardForm\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"button\",\n                value: \"Get Balance \",\n                onClick: () => getBalanceFunction()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Balance: \", retrievedBalance, \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m6HwMXl8Cm9tjXR9ali7bRo5p0g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","connect","Contract","toBN","contractAbi","jsxDEV","_jsxDEV","contractAddress","App","_s","provider","setProvider","address","setAddress","retrievedBalance","setRetrievedBalance","isConnected","setIsConnected","connectWallet","starknet","enable","starknetVersion","account","selectedAddress","error","alert","message","increaseBalanceFunction","contract","increase_balance","getBalanceFunction","_bal","get_balance","_decodedBalance","res","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","onClick","href","type","value","_c","$RefreshReg$"],"sources":["/Users/alexandrecollette/Documents/ZKBootcamp/ZK-repo/ZeroKnowledgeBootcamp/starknet_js_demo/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from \"react\"\nimport { connect } from \"get-starknet\"\nimport { Contract } from \"starknet\"\nimport { toBN } from \"starknet/dist/utils/number\"\n\nimport contractAbi from \"./contract_abi.json\"\n\nconst contractAddress = \"0x0704ed6b41f5d9dfdc5037c627d53ee52aef0675ed47ba59b57b8152c0144a9e\"\n\n\nfunction App() {\n  const [provider, setProvider] = useState('')\n  const [address, setAddress] = useState('')\n  const [retrievedBalance, setRetrievedBalance] = useState('')\n  const [isConnected, setIsConnected] = useState(false)\n\n\n  const connectWallet = async() => {\n    try{\n      // connect the wallet\n      const starknet = await connect()\n      await starknet?.enable({ starknetVersion: \"v4\" })\n      // set up the provider\n      setProvider(starknet.account)\n      // set wallet address\n     setAddress(starknet.selectedAddress)\n      // set connection flag\n      setIsConnected(true)\n      \n    }\n    catch(error){\n      alert(error.message)\n    }\n  }\n\n  const increaseBalanceFunction = async() => {\n    try{\n      // create a contract object based on the provider, address and abi\n      const contract = new Contract(contractAbi, contractAddress, provider)\n      \n      // call the increase_balance function\n      await contract.increase_balance(13)\n      \n    }\n    catch(error){\n      alert(error.message)\n    }\n  }\n\n  const getBalanceFunction = async() => {\n    try{\n      // create a contract object based on the provider, address and abi\n      const contract = new Contract(contractAbi, contractAddress, provider)\n      // call the function\n      const _bal = await contract.get_balance()\n      // decode the result\n      const _decodedBalance = toBN(_bal.res, 16).toString()\n      // display the result\n      setRetrievedBalance(_decodedBalance)\n    }\n    catch(error){\n      alert(error.message)\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <main className=\"main\">\n          <h1 className=\"title\">\n            Minimal Starknet JS DEMO\n          </h1>\n          {\n            isConnected ?\n            <button className=\"connect\">{address.slice(0, 5)}...{address.slice(60)}</button> :\n            <button className=\"connect\" onClick={() => connectWallet()}>Connect wallet</button>\n          }\n\n          <p className=\"description\">\n            Using Starknet JS with a simple contract\n          </p>\n\n          <div className=\"grid\">\n            <div href=\"#\" className=\"card\">\n              <h2>Use Alpha-goerli test net! &rarr;</h2>\n\n\n              <div className=\"cardForm\">\n                {/* <input type=\"text\" className=\"input\" placeholder=\"Enter Name\" onChange={(e) => setName(e.target.value)} /> */}\n\n                <input type=\"submit\" className=\"button\" value=\"Add ETH  \" onClick={() => increaseBalanceFunction()} />\n              </div>\n\n              <hr />\n\n              {/* <p>Insert a wallet address, to retrieve its name.</p> */}\n              <div className=\"cardForm\">\n               \n                <input type=\"submit\" className=\"button\" value=\"Get Balance \" onClick={() => getBalanceFunction()} />\n              </div>\n              <p>Balance: {retrievedBalance} ETH</p>\n            </div>\n          </div>\n        </main>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}